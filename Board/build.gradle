plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'war' //war 플러그인 추가
}

group = 'com.viper'
version = '0.0.1-SNAPSHOT'
java {
    sourceCompatibility = '17'
}
apply plugin: 'java'


group = 'com.viper'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {


	//jpa, MySQL
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java:8.0.28'

	//Hibernate
	implementation 'org.hibernate:hibernate-core:6.1.6.Final'

	//spring-security
	/*implementation 'org.springframework.boot:spring-boot-starter-security'*/

	//Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//JSP.JSTL
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'
	//

	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'


	//mapStruct
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	//Test
	testImplementation 'org.mockito:mockito-inline:3.4.4'
	testImplementation group: 'junit', name: 'junit'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	//querydsl 설정 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}
bootWar {
    mainClass = 'com.viper.board.BoardApplication'
}
tasks.named('test') {
	useJUnitPlatform()
}


//아래 전부 QueryDsl 설정 부
// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}
// java source set에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}